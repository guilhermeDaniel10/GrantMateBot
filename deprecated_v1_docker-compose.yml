version: '3.0'
services:
  grobid:
    container_name: grobid
    image: lfoppiano/grobid:0.7.2
    ports:
      - "8070:8070"
  grantmate-api:
    container_name: grantmate-api
    build:
      context: ./GrantMateAPI
      dockerfile: Dockerfile
    restart: always
    depends_on:
      - grantmate-database
      - kafka
    volumes:
      - ./GrantMateAPI/src:/usr/app/src
      - file-storage:/usr/app/file-storage
    ports:
      - 3311:3000
  grantmate-database:
    container_name: grantmate-database
    image: mysql:8.0.23
    restart: always
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
    ports:
      - 3838:3306
    security_opt:
      - seccomp:unconfined
    volumes:
      - db-data:/var/lib/mysql
  adminer:
    container_name: grantmate-adminer
    image: adminer
    restart: always
    ports:
      - 6789:8080
    links:
      - grantmate-database
  gptbot:
    container_name: gptbot
    build:
      context: ./GPTBot
      dockerfile: Dockerfile
    volumes:
      - ./GPTBot:/usr/bot
      - file-storage:/usr/bot/file-storage
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:29092
    depends_on:
      - kafka
      - grobid
  aibot:
    container_name: aibot
    build:
      context: ./AIBot
      dockerfile: Dockerfile
    volumes:
      - ./AIBot:/usr/aibot
      - file-storage:/usr/aibot/file-storage
    restart: always
    ports:
      - 3312:5000
  kafka:
    container_name: kafka
    image: 'bitnami/kafka:latest'
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:29092,PLAINTEXT_HOST://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      - KAFKA_CFG_ZOOKEEPER_SESSION_TIMEOUT_MS=6000
      - KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR=1
    ports:
      - '9092:9092'
    depends_on:
      - zookeeper
  zookeeper:
    container_name: zookeeper
    image: 'bitnami/zookeeper:latest'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    ports:
      - '2181:2181'

volumes:
  file-storage:
  db-data:
